#!/usr/bin/env bash
# Generate a self-signed TLS certificate and key (with SAN) and install
# environment variables for Uvicorn (system-wide via /etc/profile.d).
#
# Requirements: openssl, sudo privileges
#
# Usage:
#   sudo bash generate_ssl.sh -n <domain-or-ip> [-o /etc/ssl/frbot] [-d 825] [-f]
#
# Examples:
#   sudo bash generate_ssl.sh -n example.com
#   sudo bash generate_ssl.sh -n 127.0.0.1 -o /etc/ssl/frbot -d 365
#
# After running, re-login or run: source /etc/profile.d/uvicorn_ssl.sh

set -euo pipefail

NAME=""
OUT_DIR="/etc/ssl/frbot"
DAYS=825
FORCE=0

usage() {
  echo "Usage: sudo bash $0 -n <domain-or-ip> [-o /etc/ssl/frbot] [-d 825] [-f]" 1>&2
  exit 1
}

# Parse arguments
while getopts ":n:o:d:f" opt; do
  case "$opt" in
    n) NAME="$OPTARG" ;;
    o) OUT_DIR="$OPTARG" ;;
    d) DAYS="$OPTARG" ;;
    f) FORCE=1 ;;
    *) usage ;;
  esac
done

if [[ -z "${NAME}" ]]; then
  echo "[ERROR] -n <domain-or-ip> is required." 1>&2
  usage
fi

# Ensure running with sudo/root
if [[ $EUID -ne 0 ]]; then
  echo "[INFO] Re-running with sudo..."
  exec sudo -E bash "$0" -n "$NAME" -o "$OUT_DIR" -d "$DAYS" ${FORCE:+-f}
fi

# Check openssl availability
if ! command -v openssl >/dev/null 2>&1; then
  echo "[ERROR] openssl not found. Please install it (e.g., apt-get install -y openssl)" 1>&2
  exit 1
fi

# Create output directory
mkdir -p "$OUT_DIR"
chmod 755 "$OUT_DIR"

CERT_PATH="$OUT_DIR/cert.pem"
KEY_PATH="$OUT_DIR/key.pem"
CFG_PATH="/tmp/frbot_ssl_$(date +%s).cnf"

backup_if_exists() {
  local path="$1"
  if [[ -f "$path" && $FORCE -eq 0 ]]; then
    local ts="$(date +%Y%m%d_%H%M%S)"
    local bak="${path}.${ts}.bak"
    echo "[INFO] Backing up existing $(basename "$path") to $bak"
    cp -f "$path" "$bak"
  fi
}

is_ip() {
  # Basic IPv4 detection
  local ip_re='^([0-9]{1,3}\.){3}[0-9]{1,3}$'
  if [[ "$1" =~ $ip_re ]]; then
    return 0
  else
    return 1
  fi
}

# Build openssl config with SAN
{
  echo "[req]"
  echo "default_bits = 2048"
  echo "prompt = no"
  echo "default_md = sha256"
  echo "req_extensions = v3_req"
  echo "distinguished_name = dn"
  echo ""
  echo "[dn]"
  echo "CN = ${NAME}"
  echo ""
  echo "[v3_req]"
  echo "subjectAltName = @alt_names"
  echo "keyUsage = keyEncipherment, dataEncipherment, digitalSignature"
  echo "extendedKeyUsage = serverAuth"
  echo ""
  echo "[alt_names]"
  if is_ip "$NAME"; then
    echo "IP.1 = ${NAME}"
    echo "DNS.1 = localhost"
    echo "IP.2 = 127.0.0.1"
  else
    echo "DNS.1 = ${NAME}"
    echo "DNS.2 = localhost"
    echo "IP.1 = 127.0.0.1"
  fi
} > "$CFG_PATH"

echo "[INFO] OpenSSL config written to $CFG_PATH"

# Backup existing files when not forcing
backup_if_exists "$CERT_PATH"
backup_if_exists "$KEY_PATH"

# Generate key and self-signed cert
openssl req \
  -x509 \
  -nodes \
  -newkey rsa:2048 \
  -keyout "$KEY_PATH" \
  -out "$CERT_PATH" \
  -days "$DAYS" \
  -config "$CFG_PATH" \
  -extensions v3_req

# Secure permissions
chmod 600 "$KEY_PATH"
chmod 644 "$CERT_PATH"

echo "[INFO] Generated:"
echo "  CERT: $CERT_PATH"
echo "  KEY : $KEY_PATH"

# Install system-wide environment variables for Uvicorn
PROFILE_D="/etc/profile.d/uvicorn_ssl.sh"
{
  echo "# Auto-generated by generate_ssl.sh on $(date -u +'%Y-%m-%dT%H:%M:%SZ')"
  echo "export UVICORN_SSL_CERTFILE=\"$CERT_PATH\""
  echo "export UVICORN_SSL_KEYFILE=\"$KEY_PATH\""
} > "$PROFILE_D"
chmod 644 "$PROFILE_D"

echo "[INFO] Wrote env to $PROFILE_D"

echo "[INFO] To apply in current shell, run:"
echo "  source $PROFILE_D"

echo "[DONE] HTTPS cert/key created and environment variables installed."
